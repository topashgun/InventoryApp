{"version":3,"sources":["logo.png","components/header.js","components/modal.js","components/movemodal.js","components/showcontainers.js","components/bodyheader.js","components/body.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","src","Logo","alt","loading","width","Modal","state","activeclass","selectparent","name","quantity","parents","onChangeParent","bind","saveButton","onHandleChange","onQuantityChange","getId","this","setState","Axios","get","then","response","data","document","getElementById","selectedIndex","message","swal","fire","title","icon","html","showCloseButton","timer","props","resetValue","event","target","value","e","reset","console","log","id","tabIndex","role","aria-labelledby","aria-hidden","data-backdrop","data-keyboard","aria-label","type","onClick","toggleActiveClass","placeholder","onChange","disabled","length","selected","map","parent","index","key","data-dismiss","Component","toMoveItem","parentsToMove","parentItem","moveToFunction","ShowContainers","showConfirmationForDelete","Swal","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","reverseButtons","result","deleteClick","containers","scope","style","textAlign","container","updateSelectParent","data-toggle","data-target","moveModalClick","BodyHeader","breadCrumbClick","breadCrumbs","breadCrumb","Body","showContainersForParent","toMoveItemType","toMoveItemParent","loadContainer","Response","selectParent","breadCrumbArray","breadCrumbIndex","indexOf","splice","containerName","containerType","containerParent","moveTo","setValue","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.1567f104.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.bfe622e1.png\";","import React from 'react'\r\nimport Logo from '../logo.png'\r\nfunction Header() {\r\n    return (\r\n        <nav className=\"navbar navbar-light bg-light\">\r\n            <a className=\"navbar-brand\" href=\"#\">\r\n                <img src={Logo} alt=\"\" loading=\"lazy\" width=\"50\" className=\"img-fluid\"></img>\r\n            </a>\r\n            <p>Hello User</p>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\nimport Axios from 'axios';\r\nimport swal from 'sweetalert2';\r\nclass Modal extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            activeclass: null,\r\n            selectparent: '',\r\n            name: '',\r\n            quantity: '1',\r\n            parents: []\r\n        }\r\n        this.onChangeParent = this.onChangeParent.bind(this)\r\n        this.saveButton = this.saveButton.bind(this)\r\n        this.onHandleChange = this.onHandleChange.bind(this)\r\n        this.onQuantityChange = this.onQuantityChange.bind(this)\r\n\r\n    }\r\n    toggleActiveClass(getId) {\r\n        this.setState({\r\n            activeclass: getId,\r\n            quantity: '1'\r\n        })\r\n\r\n        Axios.get(\"/api/getParents?type=\" + getId).then(response => {\r\n            this.setState({\r\n                parents: response.data\r\n            })\r\n        }).then(response => {\r\n            document.getElementById(\"selectParent\").selectedIndex = \"0\";\r\n        })\r\n    }\r\n    saveButton() {\r\n        Axios.get('/api/add?type=' + this.state.activeclass + '&name=' + this.state.name + '&parent=' + this.state.selectparent + '&quantity=' + this.state.quantity)\r\n            .then(response => {\r\n                var messageString = \"<strong>\" + this.state.name + \"<span style='font-size:14px'> (\" + this.state.activeclass + \")</span></strong> has been added to <strong>\" + this.state.selectparent + \"</strong>\"\r\n                var message = \"<div class='alert alert-success m-0' role='alert'>\" + messageString + \"</div>\";\r\n                swal.fire({\r\n                    title: '',\r\n                    icon: 'success',\r\n                    html: message,\r\n                    showCloseButton: true,\r\n                    timer: 2000\r\n                })\r\n            }).then(response => {\r\n                this.props.saveButton();\r\n                this.props.resetValue(false);\r\n                this.setState({\r\n                    activeclass: null,\r\n                    name: '',\r\n                    quantity: '1',\r\n                    parents: [],\r\n                    selectparent: ''\r\n                })\r\n\r\n            })\r\n    }\r\n\r\n    onChangeParent(event) {\r\n        this.setState({\r\n            selectparent: event.target.value\r\n        })\r\n    }\r\n\r\n    onHandleChange(e) {\r\n        this.setState({\r\n            name: e.target.value\r\n        });\r\n    }\r\n\r\n    onQuantityChange(e) {\r\n        this.setState({\r\n            quantity: e.target.value\r\n        });\r\n    }\r\n    componentWillReceiveProps() {\r\n        this.props.reset == true\r\n            ? console.log(\"do not reset\")\r\n            : this.setState({\r\n                activeclass: null,\r\n                name: '',\r\n                quantity: '1',\r\n                parents: [],\r\n                selectparent: ''\r\n            })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"modal fade\" id=\"addModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">Add</h5>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-4 labelDiv\"><h6 className=\"text-right m-0\">Type :</h6></div>\r\n                                <div className=\"col-8\">\r\n                                    <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n                                        <button type=\"button\" className={`btn btn-sm btn-outline-success ${this.state.activeclass == 'container' ? 'activeContainerButton' : ''}`} id=\"container\" onClick={() => this.toggleActiveClass('container')}>Container</button>\r\n                                        <button type=\"button\" className={`btn btn-sm btn-outline-success ${this.state.activeclass == 'inventory' ? 'activeContainerButton' : ''}`} id=\"inventory\" onClick={() => this.toggleActiveClass('inventory')}>Inventory</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mt-2\">\r\n                                <div className=\"col-4 labelDiv\"><h6 className=\"text-right m-0\">Name :</h6></div>\r\n                                <div className=\"col-8\">\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Enter a name\" onChange={this.onHandleChange} value={this.state.name}></input>\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                this.state.activeclass == 'inventory'\r\n                                    ?\r\n                                    < div className=\"row mt-2\">\r\n                                        <div className=\"col-4 labelDiv\"><h6 className=\"text-right m-0\">Quantity :</h6></div>\r\n                                        <div className=\"col-8\">\r\n                                            <input type=\"text\" className=\"form-control\" placeholder=\"Enter Qty\" onChange={this.onQuantityChange} value={this.state.quantity}></input>\r\n                                        </div>\r\n                                    </div>\r\n                                    : ''\r\n                            }\r\n\r\n                            <div className=\"row mt-2\">\r\n                                <div className=\"col-4 labelDiv\"><h6 className=\"text-right m-0\">Parent :</h6></div>\r\n                                <div className=\"col-8\">\r\n                                    <select id=\"selectParent\" className=\"form-control\" onChange={this.onChangeParent} disabled={this.state.parents.length == 0 ? this.state.activeclass == \"container\" ? '' : 'disabled' : ''}>\r\n                                        <option disabled selected='selected'>Select a Parent</option>\r\n\r\n                                        {\r\n                                            this.state.activeclass == \"container\"\r\n                                                ? <option value=\"Home\">Home</option>\r\n                                                : ''\r\n                                        }\r\n                                        {\r\n                                            this.state.parents.map((parent, index) => {\r\n                                                return (\r\n                                                    <option value={parent.name} key={index}>{parent.name}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" className=\"btn btn-secondary\" onClick={() => this.props.resetValue(false)} data-dismiss=\"modal\">Close</button>\r\n                            <button type=\"button\" className=\"btn btn-primary\"\r\n                                onClick={() => this.saveButton()}\r\n                                disabled={(this.state.activeclass == null || this.state.name.length == 0 || this.state.selectparent.length == 0) ? 'disabled' : ''}\r\n                            >\r\n                                Save changes</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from 'react'\r\nimport Axios from 'axios';\r\nclass Modal extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            activeclass: null\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal fade\" id=\"moveModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\">Move <u>{this.props.toMoveItem}</u> to</h5>\r\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                <span aria-hidden=\"true\">&times;</span>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"row\">\r\n                                {\r\n                                    this.props.parentsToMove.map(parentItem => {\r\n                                        return (\r\n                                            <div className=\"col-3 px-1 mb-2\">\r\n                                                <button type=\"button\"\r\n                                                    className={`btn btn-block ${this.state.activeclass == parentItem ? 'btn-success' : 'btn-outline-success'}`}\r\n                                                    onClick={() => this.setState({ 'activeclass': parentItem })}>\r\n                                                    {parentItem}\r\n                                                </button>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.props.moveToFunction(this.state.activeclass)} data-dismiss=\"modal\">Move</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from 'react'\r\nimport Swal from 'sweetalert2'\r\nclass ShowContainers extends Component {\r\n    constructor() {\r\n        super()\r\n        this.showConfirmationForDelete = this.showConfirmationForDelete.bind(this)\r\n    }\r\n\r\n    showConfirmationForDelete(name, type) {\r\n        Swal.fire({\r\n            title: 'Delete Confirmation?',\r\n            text: \"Are you sure you want to delete \" + name + \"?\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, Delete it!',\r\n            reverseButtons: true\r\n        }).then((result) => {\r\n            if (result.value) {\r\n                this.props.deleteClick(name, type)\r\n                Swal.fire(\r\n                    'Deleted!',\r\n                    'Your ' + type + ' has been deleted.',\r\n                    'success'\r\n                )\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            this.props.containers == 0\r\n                ? <div className=\"col-12\"><div className=\"alert alert-danger w-100 text-center mt-3\" role=\"alert\"><strong>Container is empty !</strong></div></div>\r\n                : <div className=\"col-12\">\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table table-striped containersTable\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">#</th>\r\n                                    <th scope=\"col\">Type</th>\r\n                                    <th scope=\"col\">Name{this.props.containers[0].type == \"inventory\" ? '' : <h6 className=\"drillDownFont\">(Click to drill down)</h6>}</th>\r\n                                    {this.props.containers[0].type == \"inventory\"\r\n                                        ? <th scope=\"col\">Quantity</th>\r\n                                        : ''\r\n                                    }\r\n                                    <th scope=\"col\" style={{ textAlign: \"center\" }}>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.props.containers.map((container, index) => {\r\n                                        return (\r\n                                            <tr>\r\n                                                <td>{index + 1}</td>\r\n                                                <td>{container.type}</td>\r\n                                                {\r\n                                                    container.type == \"inventory\"\r\n                                                        ? <td>{container.name}</td>\r\n                                                        : <td className=\"containerTableTr\" onClick={() => this.props.updateSelectParent(container.name)}>{container.name}</td>\r\n                                                }\r\n                                                {\r\n                                                    container.type == \"inventory\"\r\n                                                        ? <td>{container.quantity}</td>\r\n                                                        : ''\r\n                                                }\r\n\r\n                                                <td>\r\n                                                    <div className=\"btn-group d-flex\" role=\"group\">\r\n                                                        <button type=\"button\" className=\"btn btn-warning w-100 btn-sm\" data-toggle=\"modal\" data-target=\"#moveModal\" onClick={() => this.props.moveModalClick(container.name, container.type, container.parent)}>Move</button>\r\n                                                        <button type=\"button\" className=\"btn btn-danger w-100 btn-sm\" onClick={() => this.showConfirmationForDelete(container.name, container.type)}>Delete</button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n\r\n        )\r\n    }\r\n}\r\nexport default ShowContainers;","import React, { Component } from 'react'\r\n\r\nclass BodyHeader extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-12\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-4\">\r\n                        <ol className=\"breadcrumb customBreadCrumb\">\r\n                            <li className=\"breadcrumb-item\" onClick={() => this.props.breadCrumbClick('Home')}><a href=\"#\">Home</a></li>\r\n                            {\r\n                                this.props.breadCrumbs.map((breadCrumb, key) => {\r\n                                    return (\r\n                                        <li className={`breadcrumb-item ${this.props.breadCrumbs.length == (key + 1) ? `active` : ``}`} onClick={() => this.props.breadCrumbClick(breadCrumb)}><a href=\"#\">{breadCrumb}</a></li>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ol>\r\n                    </div>\r\n                    <div className=\"col-lg-4\">\r\n                        <h5 className=\"text-center\">Containers</h5>\r\n                    </div>\r\n                    <div className=\"col-lg-4 col-3 mb-2\" style={{ 'display': 'flex', 'justifyContent': 'flex-end' }}>\r\n                        <button type=\"button\" id=\"addModalButton\" className=\"btn btn-success btn-sm\" data-toggle=\"modal\" data-target=\"#addModal\" onClick={() => this.props.resetValue(true)}>Add</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BodyHeader;","import React, { Component } from 'react'\r\nimport Modal from './modal'\r\nimport MoveModal from './movemodal'\r\nimport Axios from 'axios';\r\nimport ShowContainers from './showcontainers';\r\nimport BodyHeader from './bodyheader'\r\nclass Body extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            containers: [],\r\n            showContainersForParent: \"Home\",\r\n            breadCrumbs: [],\r\n            parentsToMove: [],\r\n            toMoveItem: '',\r\n            toMoveItemType: '',\r\n            toMoveItemParent: '',\r\n            resetValue: false\r\n        }\r\n        this.saveButton = this.saveButton.bind(this);\r\n        this.loadContainer = this.loadContainer.bind(this);\r\n        this.updateSelectParent = this.updateSelectParent.bind(this);\r\n        this.breadCrumbClick = this.breadCrumbClick.bind(this);\r\n        this.moveModalClick = this.moveModalClick.bind(this);\r\n        this.moveToFunction = this.moveToFunction.bind(this);\r\n        this.deleteClick = this.deleteClick.bind(this);\r\n        this.resetValue = this.resetValue.bind(this);\r\n    }\r\n    saveButton() {\r\n        this.loadContainer();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadContainer();\r\n    }\r\n\r\n    loadContainer() {\r\n        Axios.get('/api/getcontainers?parent=' + this.state.showContainersForParent).then(Response => {\r\n            this.setState({\r\n                containers: Response.data\r\n            })\r\n        });\r\n    }\r\n\r\n    updateSelectParent(selectParent) {\r\n        this.setState({\r\n            showContainersForParent: selectParent,\r\n            breadCrumbs: selectParent == 'Home' ? [] : [...this.state.breadCrumbs, selectParent]\r\n        }, this.loadContainer)\r\n    }\r\n\r\n    breadCrumbClick(parent) {\r\n        let breadCrumbArray = this.state.breadCrumbs;\r\n        let breadCrumbIndex = breadCrumbArray.indexOf(parent);\r\n        breadCrumbArray.splice(breadCrumbIndex);\r\n        this.updateSelectParent(parent);\r\n    }\r\n\r\n    moveModalClick(containerName, containerType, containerParent) {\r\n        Axios.get(\"/api/getParentsToMove?name=\" + containerName + \"&parent=\" + containerParent + \"&type=\" + containerType).then(response => {\r\n            this.setState({\r\n                parentsToMove: response.data,\r\n                toMoveItem: containerName,\r\n                toMoveItemType: containerType,\r\n                toMoveItemParent: containerParent\r\n            })\r\n        });\r\n    }\r\n\r\n    moveToFunction(moveTo) {\r\n        Axios.get(\"/api/moveTo?name=\" + this.state.toMoveItem + \"&type=\" + this.state.toMoveItemType + \"&currentParrent=\" + this.state.toMoveItemParent + \"&moveTo=\" + moveTo).then(response => {\r\n            this.setState({\r\n                parentsToMove: [],\r\n                toMoveItem: ''\r\n            })\r\n            this.loadContainer();\r\n        });\r\n    }\r\n\r\n    deleteClick(containerName, type) {\r\n        Axios.get(\"/api/deleteItem?name=\" + containerName + \"&type=\" + type).then(response => {\r\n            this.loadContainer();\r\n        });\r\n    }\r\n    resetValue(setValue) {\r\n        this.setState({\r\n            resetValue: setValue\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row mx-1 mt-3\">\r\n                <BodyHeader breadCrumbClick={this.breadCrumbClick} breadCrumbs={this.state.breadCrumbs} resetValue={this.resetValue}></BodyHeader>\r\n                <ShowContainers containers={this.state.containers} updateSelectParent={this.updateSelectParent} moveModalClick={this.moveModalClick} deleteClick={this.deleteClick}></ShowContainers>\r\n                <Modal saveButton={this.saveButton} resetValue={this.resetValue} reset={this.state.resetValue}></Modal>\r\n                <MoveModal parentsToMove={this.state.parentsToMove} toMoveItem={this.state.toMoveItem} moveToFunction={this.moveToFunction}></MoveModal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Body;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min'\nimport React from 'react';\nimport './components/custom.css'\nimport Header from './components/header'\nimport Body from './components/body'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header></Header>\n      <Body></Body>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}